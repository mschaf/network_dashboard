---
- name: Setup appserver
  hosts:
    - network-dashboard.ramaschaf.de
  remote_user: root

  vars:
    user: deploy
    group: deploy
    ruby_version: "{{ lookup('file', '../.ruby-version') }}"
    node_version: "{{ lookup('file', '../.nvmrc') }}"

    rbenv:
      env: user
      version: v1.1.2
      default_ruby: "{{ ruby_version }}"
      rubies:
        - version: "{{ ruby_version }}"

  pre_tasks:
    - name: Ensure passenger apt key is present
      ansible.builtin.apt_key:
        keyserver: keyserver.ubuntu.com
        id: 561F9B9CAC40B2F7

    - name: Ensure passenger repository is present
      copy:
        dest: "/etc/apt/sources.list.d/passenger.list"
        content: |
          deb https://oss-binaries.phusionpassenger.com/apt/passenger focal main

    - name: Ensure required apt packages are installed
      apt:
        pkg:
          - postgresql-12
          - redis
          - libpq-dev
          - nginx
          - git
          - libnginx-mod-http-passenger
          - python3-pip
          - nmap
        state: latest
        update_cache: yes

    - name: Ensure required pip packages are installed
      pip:
        name: psycopg2

    - name: Ensure group is present
      group:
        name: "{{ group }}"

    - name: Ensure user is present
      user:
        name: "{{ user }}"
        group: "{{ group }}"

    - name: Create ssh directory
      file:
        path: "/home/{{ user }}/.ssh"
        state: directory

    - name: Install ssh keys for deploy user
      copy:
        dest: "/home/{{ user }}/.ssh/authorized_keys"
        src: deploy_ssh_keys

  roles:
    - role: zzet.rbenv
      rbenv_users:
        - "{{ user }}"

    - role: stephdewit.nvm
      nvm_shell_init_file: "~/.bashrc"
      nvm_node_version: "{{ lookup('file', '../.nvmrc') }}"
      become: yes
      become_user: "{{ user }}"
      environment:
        NVM_DIR: "/home/{{ user }}/.nvm"

  tasks:
    - name: Create app directory
      file:
        path: "/var/www/app"
        state: directory
        owner: "{{ user }}"

    - name: Install yarn
      npm:
        name: yarn
        global: yes
      environment:
        PATH: "/home/{{ user }}/.nvm/versions/node/{{ node_version }}/bin:{{ ansible_env.PATH }}"

    - name: Create the database user
      postgresql_user:
        name: deploy
        no_password_changes: true
      become: true
      become_user: postgres

    - name: Create database
      postgresql_db:
        name: network_dashboard_production
        owner: deploy
      become: true
      become_user: postgres

    - name: Enable passenger nginx module
      file:
        src: /usr/share/nginx/modules-available/mod-http-passenger.load
        dest: /etc/nginx/modules-enabled/50-mod-http-passenger.conf
        state: link

    - name: Configure nginx
      copy:
        dest: /etc/nginx/sites-available/default
        content: |
          server {
              listen 80 default_server;
              root /var/www/app/current/public;
              server_name network_dashboard;

              passenger_enabled on;
              passenger_ruby /home/{{ user }}/.rbenv/shims/ruby;
              passenger_sticky_sessions on;
          }

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    - name: Allow user to run nmap as root
      lineinfile:
        path: /etc/sudoers
        line: "{{ user }} ALL = (root) NOPASSWD: /usr/bin/nmap"

    - name: Setup sidekiq service
      copy:
        dest: /etc/systemd/system/sidekiq.service
        src: sidekiq.service

    - name: Reload systemd deamon
      systemd:
        daemon_reload: yes
        scope: user

    - name: Ensure lingering is enabled for deploy user enabled
      command:
        cmd: "loginctl enable-linger {{ user }}"
        creates: "/var/lib/systemd/linger/{{ user }}"